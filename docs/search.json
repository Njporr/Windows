[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nick Porr",
    "section": "",
    "text": "Hello! My name is Nick Porr. I am a second semester senior at George Washington University and an intern in the Washington Wizards Marketing Department.\n\nEducation\nRamsey High School\nGeorge Washington University (currently attending)\n\nBA in Journalism with minors in Statistics and Film Studies\n\n\n\nSkills\nWriting\nEvent Planning\nData Analysis\nMarketing"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Resume",
    "section": "",
    "text": "Resume"
  },
  {
    "objectID": "Portfolio.html",
    "href": "Portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Led by Junior Sean Sanders, Marshall HS Athletics Compete in State Track and Field Championship\n\n\nLake Braddock Shocks Justice High School in Penalties\nMore Stories by Nick Porr"
  },
  {
    "objectID": "Analysis.html",
    "href": "Analysis.html",
    "title": "Virginia Election Analysis",
    "section": "",
    "text": "For the presidency: Donald Trump (R) and Joseph R. Biden (D). For the Senate: Glenn A. Youngkin (R) and Terry R. McAuliffe (D). Here is the data presented using the DT function:\n\nlibrary(DT)\njoined_vacomparison <- read.csv(\"joined_vacomparison.csv\")\nDT::datatable(joined_vacomparison)\n\n\n\n\n\n\nNow that we have that data set up, we’re going to create a new column to show the difference between Youngkin and Trump’s vote percentages. Positive numbers will mean a Youngkin advantage, negative a Trump advantage. For this step, the tidyverse package is necessary.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nRmargin= mutate(joined_vacomparison, YoungkinvsTrump= pct_youngkin-trump_pct)\nDT::datatable(Rmargin)\n\n\n\n\n\n\nNow let’s take a look at the counties with the five greatest difference in vote percentage of the two Republicans. To start, lets arrange the counties by highest value to lowest using the arrange() function.\n\nDescending = arrange(Rmargin, desc(YoungkinvsTrump))\nDT::datatable(Descending)\n\n\n\n\n\n\nNow let’s separate the top five localities (Radford, King George, Charlotte, Mecklenburg, and Prince Edward County) The head() function will take the top five in the dataframe.\n\ntop5 <- head(Descending, 5)\n\nFrom here we can take the new five data points and create a bar graph showing their percentage differences. This uses gg_plot, specifically the geom_bar to create a bar graph showing the data separated above.\n\nggplot(data = top5, aes(x=locality, y=YoungkinvsTrump))+geom_bar(stat = \"identity\",fill=\"red\")+geom_text(aes(label=YoungkinvsTrump), vjust=1.6, color=\"white\", size=3)+labs(title=\"Youngkin's Top Five Counties vs. Trump\", x=\"County\", y=\"Percent Difference\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))\n\n\n\n\nUsing the same data set, we can also find the five counties where Youngkin had the highest percentage of the vote in his election for senate:. First, we arrange the data by his percentage and separate the top five counties:\n\nYoungkin <- arrange(joined_vacomparison, desc(pct_youngkin))\nYoungkin5 <- head(Youngkin,5)\nDT::datatable(Youngkin5)\n\n\n\n\n\n\nThen we can make a similar table for these results:\n\nggplot(data = Youngkin5, aes(x=locality, y=pct_youngkin))+geom_bar(stat = \"identity\",fill=\"red\")+geom_text(aes(label=pct_youngkin), vjust=1.6, color=\"white\", size=3)+labs(title=\"Youngkin's Top Five Counties\", x=\"County\", y=\"Percent of Vote\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))\n\n\n\n\nWe can also do the same for his Democratic opponent McAullife:\n\nMcauliffe <- arrange(joined_vacomparison, desc(pct_mcauliffe))\nMCauliffe5 <- head(Mcauliffe,5)\nggplot(data = MCauliffe5, aes(x=locality, y=pct_mcauliffe))+geom_bar(stat = \"identity\",fill=\"blue\")+geom_text(aes(label=pct_mcauliffe), vjust=1.6, color=\"white\", size=3)+labs(title=\"McAuliffe's Top Five Counties\", x=\"County\", y=\"Percent of Vote\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))\n\n\n\n\nOne finding I was interested in was how the counties surrounding DC performed for the two senate candidates. For this, I first created a new column for margin of Youngkin vs. McAuliffe. I pulled out Arlington, Alexandria, Fairfax, and Falls Church, then created a bar graph:\n\nsenatemargin=mutate(joined_vacomparison, YoungkinMargin= pct_youngkin-pct_mcauliffe)\nmarginsDMV = filter(senatemargin, locality==c(\"FALLS CHURCH CITY\")|locality==c(\"ALEXANDRIA CITY\")|locality==c(\"FAIRFAX COUNTY\")|locality==c(\"ARLINGTON COUNTY\"))\nDT::datatable(marginsDMV)\n\n\n\n\n\n\nThen, we can create a bar graph to accompany these margins, showing an expected dominant performance for the democratic candidate in the near-metropolitan localities.\n\nggplot(data = marginsDMV, aes(x=locality, y=YoungkinMargin))+geom_bar(stat = \"identity\",fill=\"blue\")+geom_text(aes(label=YoungkinMargin), vjust=-1.6, color=\"white\", size=3)+labs(title=\"DMV Locality Senate Margins\", x=\"Locality\", y=\"Youngkin vs. McAuliffe\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))\n\n\n\n\nIn these same counties i wanted to see how the percentage who voted for trump differed from those who voted for Youngkin. I used the same dataset with that margin from before and filtered out the same four localities\n\nRmarginDMV = filter(Rmargin, locality==c(\"FALLS CHURCH CITY\")|locality==c(\"ALEXANDRIA CITY\")|locality==c(\"FAIRFAX COUNTY\")|locality==c(\"ARLINGTON COUNTY\"))\nDT::datatable(marginsDMV)\n\n\n\n\n\n\nThen I created a bar graph to show these four counties Youngkin vs. Trump margin. AS expected, the narrative of Trump underperforming in city suburbs vs. his more moderate Republican counterparts is consistent in the DMV. Youngkin out performed Trump by over 5% in each county as shown below:\n\nggplot(data = RmarginDMV, aes(x=locality, y=YoungkinvsTrump))+geom_bar(stat = \"identity\",fill=\"red\")+geom_text(aes(label=YoungkinvsTrump), vjust=1.6, color=\"white\", size=3)+labs(title=\"DMV Localities: Youngkin vs. Turmp\", x=\"Locality\", y=\"Youngkin vs. Trump\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))\n\n\n\n\nFinally, I wanted to see which counties went hardest to Joe Biden. To start, I created a Biden vs. Trump margin column from the original dataset, then arrange by the top Biden counties and select the top 5.\n\npresmargin=mutate(joined_vacomparison, bidenmargin= biden_pct-trump_pct)\nbiden5 <- arrange(presmargin,desc(bidenmargin))%>%head(5)\n\nThen I created a graph again using ggplot, showing the five counties Biden performed best in. Again, as expected, they are all metropolitan areas:\n\nggplot(data = biden5, aes(x=locality, y=bidenmargin))+geom_bar(stat = \"identity\",fill=\"blue\")+geom_text(aes(label=bidenmargin), vjust=1.6, color=\"white\", size=3)+labs(title=\"Biden's 5 Biggest Locality Wins\", x=\"Locality\", y=\"Win Percentage\")+theme(\nplot.title = element_text(hjust=0.5,color=\"black\", size=20, face=\"bold\"),\naxis.title.x = element_text(color=\"black\", size=20, face=\"bold\"),\naxis.title.y = element_text(color=\"black\", size=20, face=\"bold\"), axis.text.x = element_text(vjust = 0.5,hjust = 0.5, color=\"black\", size=7.5, face=\"bold\"))+scale_x_discrete(guide=guide_axis(n.dodge=3))"
  },
  {
    "objectID": "Thunder.html",
    "href": "Thunder.html",
    "title": "Thunder Application Project",
    "section": "",
    "text": "The project used two datasets, which are loaded in using the read.csv function. Also, we are loading the tidyverse package with contains ggplot as well as a number of other data tidying tools which are helpful here\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nstandings <- read.csv(\"combined_standings.csv\", stringsAsFactors=FALSE)\nteam_v_team <- read.csv(\"combined_team_vs_team_records.csv\",stringsAsFactors=FALSE)\n\nThese datasets contain every NBA team’s record from 2005-2020, as well as their head to head matchup results by season. These datasets contain plenty of information that can be extrapelated, but here, were are going to only look at how each conference compares against the other.\n(For those who don’t follow the NBA, the Association is comprised of 30 teams split into two 15 team conferences by geography.)\nFor this section we are going to only be using the team_v_team dataset. To make it more managable, we are going to change it from a dataframe to a tibble, tidyr’s version of a dataframe\n\ntibbletvt = as_tibble(team_v_team)\n\nFrom here, we use the gather() function to group teams by opponent. Additionally, we don’t want situations where a team plays themselves included. So we will use na.omit to remove those occurences which as NAs\n\nreorganized=gather(tibbletvt, key=\"Opponent\", value=\"Record\",ATL:WAS)\nnoself=na.omit(reorganized)\n\nLastly for the process of cleaning, we need to seperate win/loss into to separate columns so there is one for each. Here we use the separate function, marking the ‘-’ as the delineator to break it up by:\n\nfinal=separate(noself, Record, into = c(\"Wins\",\"Losses\"), sep=\"-\")\n\nIt now may interpret these two columns as text, not numeric values. We can use as.numeric to fix that for each column:\n\nfinal$Wins=as.numeric(final$Wins)\nfinal$Losses = as.numeric(final$Losses)\n\nNowt to see how the two conferences faired against each other, we are going to filter out the reference teams to only include western conference teams. This code is a little long, but its just a use of the filter() function and the or operator between them\n\nwest = filter(final, bb_ref_team_name==c(\"Dallas Mavericks\")|bb_ref_team_name==c(\"Denver Nuggets\")|bb_ref_team_name==c(\"Golden State Warriors\")|bb_ref_team_name==c(\"Houston Rockets\")|bb_ref_team_name==c(\"Los Angeles Clippers\")|bb_ref_team_name==c(\"Los Angeles Lakers\")|bb_ref_team_name==c(\"Memphis Grizzlies\")|bb_ref_team_name==c(\"Minnesota Timberwolves\")|bb_ref_team_name==c(\"New Orleans Hornets\")|bb_ref_team_name==c(\"New Orleans Pelicans\")|bb_ref_team_name==c(\"New Orleans/Oklahoma City Hornets\")|bb_ref_team_name==c(\"Oklahoma City Thunder\")|bb_ref_team_name==c(\"Seattle SuperSonics\")|bb_ref_team_name==c(\"Phoenix Suns\")|bb_ref_team_name==c(\"Portland Trail Blazers\")|bb_ref_team_name==c(\"Sacramento Kings\")|bb_ref_team_name==c(\"San Antonio Spurs\")|bb_ref_team_name==c(\"Utah Jazz\"))\n\nNow that we only have Western team’s records, we want to filter for games where they play one of the 15 Eastern Conference teams:\n\nwest_v_east= filter(west, Opponent ==c(\"ATL\")|Opponent ==c(\"BKN\")|Opponent ==c(\"BOS\")|Opponent ==c(\"CHA\")|Opponent ==c(\"CHI\")|Opponent ==c(\"CLE\")|Opponent ==c(\"DET\")|Opponent ==c(\"IND\")|Opponent ==c(\"MIA\")|Opponent ==c(\"MIL\")|Opponent ==c(\"NYK\")|Opponent ==c(\"ORL\")|Opponent ==c(\"PHI\")|Opponent ==c(\"TOR\")|Opponent ==c(\"WAS\"))\n\nNow that we have a dataset of only west vs east games, we can find the sum of the wins and losses to see what their record was against each other:\n\nsum(west_v_east$Wins)\n\n[1] 3878\n\nsum(west_v_east$Losses)\n\n[1] 3081\n\n\nWith 3878 wins and 3081 losses, the Western Conference held a winning record against the Eastern conference over that 15 year period! To see their win percentage, just put wins over total:\n\n3878+3081\n\n[1] 6959\n\n3979/6959\n\n[1] 0.5717776\n\n\nThe Western Conference was fairly dominant, winning 57.17% of their games!"
  }
]